unit Model.Thread.SimuladorVendas;

interface

type
  TInsertVenda = class
  private
    FDATAVENDA: TDateTime;
    FQTD: Double;
    FID_BOMBA: Integer;
    FHORAVENDA: TDateTime;
    FPRECOVENDA: Double;
    FTOTALVENDA: Double;
    FPERCENTUALIMPOSTO: Double;
    FID_VENDA: Integer;
  published
  function CriaVenda: TInsertVenda;
  property ID_VENDA: Integer read FID_VENDA write FID_VENDA;
  property ID_BOMBA: Integer read FID_BOMBA write FID_BOMBA;
  property QTD: Double read FQTD write FQTD;
  property PRECOVENDA: Double read FPRECOVENDA write FPRECOVENDA;
  property PERCENTUALIMPOSTO: Double read FPERCENTUALIMPOSTO write FPERCENTUALIMPOSTO;
  property TOTALVENDA: Double read FTOTALVENDA write FTOTALVENDA;
  property DATAVENDA: TDateTime read FDATAVENDA write FDATAVENDA;
  property HORAVENDA: TDateTime read FHORAVENDA write FHORAVENDA;

  end;

implementation

{ TInsertVenda }

function TInsertVenda.CriaVenda: TInsertVenda;
begin
  InsertVenda.ID_VENDA := ProxCod('VENDA', 'ID_VENDA');

  if True then
  begin
    InsertVenda.ID_BOMBA := 1;
  end;

  if (InsertVenda.ID_BOMBA  = 1) or (InsertVenda.ID_BOMBA  = 2) then //Bomba 1 e 2 são de Gasolina
  begin
    InsertVenda.QTD := (InsertVenda.ID_BOMBA + Trunc(Now)) * 10 ;
    InsertVenda.PRECOVENDA := 4;
  end
  else                                                               //Bomba 3 e 4 são de Oleo Diesel
  begin
    InsertVenda.QTD := (InsertVenda.ID_BOMBA + Trunc(Now)) * 5;
    InsertVenda.PRECOVENDA := 3;
  end;
  InsertVenda.PERCENTUALIMPOSTO := 0.13;
  InsertVenda.TOTALVENDA := (InsertVenda.QTD * InsertVenda.PRECOVENDA) + ((InsertVenda.QTD * InsertVenda.PRECOVENDA)  * InsertVenda.PERCENTUALIMPOSTO);
  InsertVenda.DATAVENDA := Now;
  InsertVenda.HORAVENDA := Now;
end;

end.
